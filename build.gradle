// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
plugins {
    id 'org.ajoberstar.grgit' version '1.7.0'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0-SNAPSHOT" // For snapshots as first release, TODO remove -SNAPSHOT suffix if stable.
group = "net.reflxction" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ExampleMod"

// Use JDK 8 for compilation
sourceCompatibility = targetCompatibility = 1.8

// Use UTF-8 for encoding
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    shade
    compile.extendsFrom(shade)
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

shadowJar {
    classifier '' // Replace the default JAR
}

//noinspection GroovyMissingReturnStatement
reobf {
    shadowJar {}
}

dependencies {
    shade ('com.github.ReflxctionDev:SimpleJSON:1.9.5-SNAPSHOT') {
        exclude module: 'gson'
        exclude module: 'guava'
        exclude module: 'commons-io'
    }
}

jar {
    manifest {
        attributes FMLCorePluginContainsFMLMod: true
    }
    dependsOn configurations.compile
    from {
        configurations.shade.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else that isn't the mcmod.info file
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
